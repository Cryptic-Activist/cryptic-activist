import {
  AcceptedCryptocurrency,
  AcceptedCryptocurrencyPayload,
  Admin,
  AdminPayload,
  Block,
  BlockPayload,
  Chat,
  ChatPayload,
  Cryptocurrency,
  CryptocurrencyPayload,
  Feedback,
  FeedbackPayload,
  FeedbackType,
  Fiat,
  FiatPayload,
  KYC,
  KYCPayload,
  KYCStatus,
  Language,
  LanguagePayload,
  Offer,
  OfferPayload,
  PaymentMethod,
  PaymentMethodCategory,
  PaymentMethodCategoryPayload,
  PaymentMethodPayload,
  PaymentReceipt,
  PaymentReceiptPayload,
  PremiumPurchase,
  PremiumPurchasePayload,
  Prisma,
  PrismaClient,
  PrismaPromise,
  SystemMessage,
  SystemMessagePayload,
  Tier,
  TierPayload,
  Trade,
  TradePayload,
  TradeStatus,
  Transaction,
  TransactionPayload,
  TransactionPaymentMethod,
  TransactionPaymentMethodPayload,
  TransactionPaymentMethodType,
  TransactionStatus,
  Trust,
  TrustPayload,
  User,
  UserLanguage,
  UserLanguagePayload,
  UserPayload,
} from '@prisma/client';

export const prisma = new PrismaClient();

export type BatchPayload = Prisma.BatchPayload;

export {
  AcceptedCryptocurrency,
  AcceptedCryptocurrencyPayload,
  Admin,
  AdminPayload,
  Block,
  BlockPayload,
  Chat,
  ChatPayload,
  Cryptocurrency,
  CryptocurrencyPayload,
  Feedback,
  FeedbackPayload,
  FeedbackType,
  Fiat,
  FiatPayload,
  KYC,
  KYCPayload,
  KYCStatus,
  Language,
  LanguagePayload,
  Offer,
  OfferPayload,
  PaymentMethod,
  PaymentMethodCategory,
  PaymentMethodCategoryPayload,
  PaymentMethodPayload,
  PaymentReceipt,
  PaymentReceiptPayload,
  PremiumPurchase,
  PremiumPurchasePayload,
  Prisma,
  PrismaClient,
  PrismaPromise,
  SystemMessage,
  SystemMessagePayload,
  Tier,
  TierPayload,
  Trade,
  TradePayload,
  TradeStatus,
  Transaction,
  TransactionPayload,
  TransactionPaymentMethod,
  TransactionPaymentMethodPayload,
  TransactionPaymentMethodType,
  TransactionStatus,
  Trust,
  TrustPayload,
  User,
  UserLanguage,
  UserLanguagePayload,
  UserPayload,
};
