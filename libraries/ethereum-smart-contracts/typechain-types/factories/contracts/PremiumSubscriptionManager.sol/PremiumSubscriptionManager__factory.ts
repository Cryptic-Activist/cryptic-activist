/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PremiumSubscriptionManager,
  PremiumSubscriptionManagerInterface,
} from "../../../contracts/PremiumSubscriptionManager.sol/PremiumSubscriptionManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_paymentToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_platformWallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_monthlyPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_yearlyPrice",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newToken",
        type: "address",
      },
    ],
    name: "PaymentTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newPlatformWallet",
        type: "address",
      },
    ],
    name: "PlatformWalletUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum PremiumSubscriptionManager.PlanType",
        name: "planType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "PriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum PremiumSubscriptionManager.PlanType",
        name: "planType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiryTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "paymentHash",
        type: "bytes32",
      },
    ],
    name: "SubscriptionActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum PremiumSubscriptionManager.PlanType",
        name: "planType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newExpiryTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "paymentHash",
        type: "bytes32",
      },
    ],
    name: "SubscriptionRenewed",
    type: "event",
  },
  {
    inputs: [],
    name: "SECONDS_IN_MONTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SECONDS_IN_YEAR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "deactivateSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "additionalTime",
        type: "uint256",
      },
    ],
    name: "extendSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getPaymentHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlatformWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getSubscriptionDetails",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "expiryTimestamp",
            type: "uint256",
          },
          {
            internalType: "enum PremiumSubscriptionManager.PlanType",
            name: "planType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "lastPaymentAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "lastPaymentHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "paymentCount",
            type: "uint256",
          },
        ],
        internalType: "struct PremiumSubscriptionManager.Subscription",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum PremiumSubscriptionManager.PlanType",
        name: "planType",
        type: "uint8",
      },
    ],
    name: "getSubscriptionPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getTimeRemaining",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "hasSubscriptionHistory",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isSubscriptionActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseSubscriptions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum PremiumSubscriptionManager.PlanType",
        name: "planType",
        type: "uint8",
      },
    ],
    name: "renewSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum PremiumSubscriptionManager.PlanType",
        name: "planType",
        type: "uint8",
      },
    ],
    name: "subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum PremiumSubscriptionManager.PlanType",
        name: "",
        type: "uint8",
      },
    ],
    name: "subscriptionPrices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "subscriptions",
    outputs: [
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "expiryTimestamp",
        type: "uint256",
      },
      {
        internalType: "enum PremiumSubscriptionManager.PlanType",
        name: "planType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "lastPaymentAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "lastPaymentHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "paymentCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newToken",
        type: "address",
      },
    ],
    name: "updatePaymentToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newPlatformWallet",
        type: "address",
      },
    ],
    name: "updatePlatformWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum PremiumSubscriptionManager.PlanType",
        name: "planType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "updatePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "usedPaymentHashes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "paymentHash",
        type: "bytes32",
      },
    ],
    name: "verifyPaymentHash",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllPayments",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawPayments",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461020c57601f61163338819003918201601f19168301916001600160401b038311848410176102115780849260809460405283398101031261020c5761004781610227565b9061005460208201610227565b91606060408301519201519233156101f65760008054336001600160a01b0319821681178355604051949290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600180556001600160a01b03169182156101a857506001600160a01b031690811561015457600480546001600160a01b03199081169290921790556005805490911691909117905560036020527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff5560016000527fa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054c556040516113f7908161023c8239f35b60405162461bcd60e51b815260206004820152602660248201527f506c6174666f726d2077616c6c65742063616e6e6f74206265207a65726f206160448201526564647265737360d01b6064820152608490fd5b62461bcd60e51b8152602060048201526024808201527f5061796d656e7420746f6b656e2063616e6e6f74206265207a65726f206164646044820152637265737360e01b6064820152608490fd5b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820361020c5756fe6080604052600436101561001257600080fd5b60003560e01c80627fa4f01461102e57806301d5200b14610fc25780630b0ad26a14610f975780631440132914610f5157806327855b1314610f335780633013ce2914610f0a57806341975af814610e60578063472ab71b14610e1e57806349c7e63914610beb5780634ccf1b3414610b3557806352273f7a14610af857806357d6e5be146105df5780635dcc939114610ad95780636f9fb98a14610a54578063715018a6146109fb5780637421eabc146108ba5780638da5cb5b146108915780638f740f6814610610578063a5508b6d146105df578063ada4ef301461051a578063b8deef4c14610496578063c8a46f9514610465578063d2b5b72c146103be578063d474f84f146102d1578063d76a09f41461015a578063f046395a14610250578063f2fde38b146101c7578063f9f16079146101885763fa2af9da1461015a57600080fd5b34610183576000366003190112610183576005546040516001600160a01b039091168152602090f35b600080fd5b34610183576020366003190112610183576001600160a01b036101a9611099565b16600052600260205260206005604060002001541515604051908152f35b34610183576020366003190112610183576101e0611099565b6101e861132a565b6001600160a01b0316801561023a57600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b34610183576020366003190112610183576001600160a01b03610271611099565b16600052600260205260c0604060002060ff8154169060018101549060ff6002820154166102c060038301549160056004850154940154946040519615158752602087015260408601906110de565b6060840152608083015260a0820152f35b34610183576020366003190112610183576102ea611099565b600060a06040516102fa81611167565b828152826020820152826040820152826060820152826080820152015260018060a01b0316600052600260205260c060406000206040519061033b82611167565b60ff815416151582526001810154906020830191825260ff6002820154166103676040850191826112e9565b6103aa6003830154916060860192835260056004850154946080880195865201549460a087019586526040519651151587525160208701525160408601906110de565b5160608401525160808301525160a0820152f35b34610183576040366003190112610183576103d7611099565b6103df61132a565b6001600160a01b031660008181526002602052604090205460ff1615610420576000526002602052600160406000200161041c60243582546112dc565b9055005b60405162461bcd60e51b815260206004820152601f60248201527f5573657220686173206e6f2061637469766520737562736372697074696f6e006044820152606490fd5b34610183576020366003190112610183576004356000526006602052602060ff604060002054166040519015158152f35b34610183576040366003190112610183576001600160a01b036104b7611099565b168060005260026020526024356004604060002001541480610502575b806104e7575b6020906040519015158152f35b506000526002602052602060016040600020015442106104da565b5080600052600260205260ff604060002054166104d4565b3461018357602036600319011261018357610533611099565b61053b61132a565b6001600160a01b0316801561058b576020817f73238e3ae0a71b401b31ae67204506d074de41bd5c084082fba9b64b1c7fa28f926001600160601b0360a01b6005541617600555604051908152a1005b60405162461bcd60e51b815260206004820152602660248201527f506c6174666f726d2077616c6c65742063616e6e6f74206265207a65726f206160448201526564647265737360d01b6064820152608490fd5b34610183576020366003190112610183576004356002811015610183576106076020916110af565b54604051908152f35b3461018357602036600319011261018357600435600281101561018357610635611353565b33600052600260205260ff604060002054161561085357610660610658826110af565b541515611213565b610669816110af565b54600480546040516323b872dd60e01b8152339281019290925230602483015260448201839052919291602090829060649082906000906001600160a01b03165af18015610847576106c391600091610818575b50611253565b6106cf42838333611375565b908160005260066020526106eb60ff6040600020541615611290565b6000828152600660205260408120805460ff19166001179055918161080e5762278d005b3384526002602052426001604086200154116000146107fe5761074190338552600260205260016040862001546112dc565b935b3384526002602052846001604086200155338452600260205261076c83600260408720016112f5565b338452600260205260036040852001553383526002602052806004604085200155338352600260205260056040842001938454600181018091116107ea577fd80186d313a12a7396ae39e8ad3dd23b0c81012ae3894bb589bfac35c8c1c595939495556107e060405192839233968461130d565b0390a26001805580f35b634e487b7160e01b85526011600452602485fd5b61080890426112dc565b93610743565b6301e1338061070f565b61083a915060203d602011610840575b6108328183611199565b8101906111bb565b846106bd565b503d610828565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152601660248201527527379030b1ba34bb329039bab139b1b934b83a34b7b760511b6044820152606490fd5b34610183576000366003190112610183576000546040516001600160a01b039091168152602090f35b34610183576000366003190112610183576108d361132a565b600480546040516370a0823160e01b815230928101929092526001600160a01b0316602082602481845afa918215610847576000926109c4575b5081156109875760055460405163a9059cbb60e01b81526001600160a01b0390911660048201526024810192909252602090829081600081604481015b03925af180156108475761096691600091610968575b506111d3565b005b610981915060203d602011610840576108328183611199565b82610960565b60405162461bcd60e51b81526020600482015260156024820152744e6f20746f6b656e7320746f20776974686472617760581b6044820152606490fd5b90916020823d6020116109f3575b816109df60209383611199565b810103126109f0575051908261090d565b80fd5b3d91506109d2565b3461018357600036600319011261018357610a1461132a565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610183576000366003190112610183576024602060018060a01b0360045416604051928380926370a0823160e01b82523060048301525afa801561084757600090610aa6575b602090604051908152f35b506020813d602011610ad1575b81610ac060209383611199565b810103126101835760209051610a9b565b3d9150610ab3565b346101835760003660031901126101835760206040516301e133808152f35b34610183576020366003190112610183576001600160a01b03610b19611099565b1660005260026020526020600460406000200154604051908152f35b3461018357602036600319011261018357610b4e611099565b610b5661132a565b6001600160a01b03168015610ba6576020817fbd4032c1c91da2791730ea1bbc82c6b6f857da7c0a8318143d19ef74e62cd913926001600160601b0360a01b6004541617600455604051908152a1005b60405162461bcd60e51b815260206004820152601c60248201527f546f6b656e2063616e6e6f74206265207a65726f2061646472657373000000006044820152606490fd5b3461018357602036600319011261018357600435600281101561018357610c10611353565b610c1c610658826110af565b610c25816110af565b54600480546040516323b872dd60e01b8152339281019290925230602483015260448201839052919291602090829060649082906000906001600160a01b03165af1801561084757610c7e916000916108185750611253565b610c8a42838333611375565b90816000526006602052610ca660ff6040600020541615611290565b6000828152600660205260408120805460ff191660011790559181610e145762278d005b338452600260205260ff60408520541680610dfc575b15610ded57610cfe90338552600260205260016040862001546112dc565b3384526002602052600560408520015494600186018096116107ea5760405190610d2782611167565b60018252602082019083825260408301610d4187826112e9565b60608401918252608084019286845260a08501998a523389526002602052604089209451151560ff80198754169116178555516001850155516002811015610dd957917f3bc803a99422bd47d4af4edb00e8010c690a2ecdf103c59b3ae8c259fd83df1896979891610db8600594600287016112f5565b516003850155516004840155519101556107e060405192839233968461130d565b634e487b7160e01b88526021600452602488fd5b610df790426112dc565b610cfe565b50338452600260205242600160408620015411610ce0565b6301e13380610cca565b3461018357602036600319011261018357610e37611099565b610e3f61132a565b6001600160a01b03166000908152600260205260409020805460ff19169055005b3461018357602036600319011261018357600435610e7c61132a565b8015610ec5576004805460055460405163a9059cbb60e01b81526001600160a01b039182169381019390935260248301939093529091602091839116816000816044810161094a565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b34610183576000366003190112610183576004546040516001600160a01b039091168152602090f35b3461018357600036600319011261018357602060405162278d008152f35b34610183576020366003190112610183576001600160a01b03610f72611099565b1680600052600260205260ff60406000205416806104e7576020906040519015158152f35b34610183576020366003190112610183576020610fba610fb5611099565b6110eb565b604051908152f35b3461018357600036600319011261018357610fdb61132a565b600360205260007f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff819055600181527fa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054c55005b346101835760403660031901126101835760043560028110156101835760407ff798c75b2db09ea1034d9be253e9974b17bbe4a06f2b0ff6695054fa5b7471919160243561107a61132a565b80611084836110af565b55611091835180936110de565b6020820152a1005b600435906001600160a01b038216820361018357565b60028110156110c8576000526003602052604060002090565b634e487b7160e01b600052602160045260246000fd5b9060028210156110c85752565b6001600160a01b031660008181526002602052604090205460ff1615801561114c575b6111465760005260026020526001604060002001544281039081116111305790565b634e487b7160e01b600052601160045260246000fd5b50600090565b5080600052600260205260016040600020015442101561110e565b60c0810190811067ffffffffffffffff82111761118357604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761118357604052565b90816020910312610183575180151581036101835790565b156111da57565b60405162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b6044820152606490fd5b1561121a57565b60405162461bcd60e51b8152602060048201526011602482015270496e76616c696420706c616e207479706560781b6044820152606490fd5b1561125a57565b60405162461bcd60e51b815260206004820152600e60248201526d14185e5b595b9d0819985a5b195960921b6044820152606490fd5b1561129757565b60405162461bcd60e51b815260206004820152601960248201527f5061796d656e74206861736820616c72656164792075736564000000000000006044820152606490fd5b9190820180921161113057565b60028210156110c85752565b9060028110156110c85760ff80198354169116179055565b6040919493926113218260608101976110de565b60208201520152565b6000546001600160a01b0316330361133e57565b63118cdaa760e01b6000523360045260246000fd5b600260015414611364576002600155565b633ee5aeb560e01b60005260046000fd5b9290916040519260208401946001600160601b03199060601b16855260028110156110c85760f81b603484015260358301526055820152605581526113bb607582611199565b5190209056fea26469706673582212206d1bba4977cf2df511059effc10583b1a7e2a6ab5c526bb6592e4fbf97b4409a64736f6c634300081c0033";

type PremiumSubscriptionManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PremiumSubscriptionManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PremiumSubscriptionManager__factory extends ContractFactory {
  constructor(...args: PremiumSubscriptionManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _paymentToken: AddressLike,
    _platformWallet: AddressLike,
    _monthlyPrice: BigNumberish,
    _yearlyPrice: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _paymentToken,
      _platformWallet,
      _monthlyPrice,
      _yearlyPrice,
      overrides || {}
    );
  }
  override deploy(
    _paymentToken: AddressLike,
    _platformWallet: AddressLike,
    _monthlyPrice: BigNumberish,
    _yearlyPrice: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _paymentToken,
      _platformWallet,
      _monthlyPrice,
      _yearlyPrice,
      overrides || {}
    ) as Promise<
      PremiumSubscriptionManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PremiumSubscriptionManager__factory {
    return super.connect(runner) as PremiumSubscriptionManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PremiumSubscriptionManagerInterface {
    return new Interface(_abi) as PremiumSubscriptionManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PremiumSubscriptionManager {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PremiumSubscriptionManager;
  }
}
