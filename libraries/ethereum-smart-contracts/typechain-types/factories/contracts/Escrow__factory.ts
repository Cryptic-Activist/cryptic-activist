/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Escrow, EscrowInterface } from "../../contracts/Escrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_arbitrator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_platformWallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_cryptoAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_buyerCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sellerCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_profitMargin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tradeDuration",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "buyerAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellerAmount",
        type: "uint256",
      },
    ],
    name: "ArbitrationResolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "TradeCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "TradeCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "TradeConfirmed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TradeCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "TradeDisputed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellerCollateral",
        type: "uint256",
      },
    ],
    name: "TradeFunded",
    type: "event",
  },
  {
    inputs: [],
    name: "DISPUTE_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "arbitrator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyerCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "confirmTrade",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "cryptoAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fundTrade",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "profitMargin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "buyerPercentage",
        type: "uint256",
      },
    ],
    name: "resolveDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "seller",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sellerCollateral",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "enum Escrow.TradeState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeDeadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461030357601f610e2338819003918201601f19168301916001600160401b038311848410176103085780849261014094604052833981010312610303576100488161031e565b906100556020820161031e565b6100616040830161031e565b9261006e6060840161031e565b9260808101519260a082015160c08301519060e0840151926101206101008601519501519560018060a01b031697881515806102f1575b806102df575b156102a6576001600160a01b031690811561026157871561021c576127108510156101e35761271086101561019e57600080546001600160a01b03199081168b179091556001805482166001600160a01b039384169081179091556002805483169c9093169b909b1790915560038054909116919091179055600486905560055560065560075560085542908101908110610188577f3285b183537f15a1519026ee49832e75ff49d2c7f756aa29f51cbf3c44215f4091602091600a5560ff1960095416600955604051908152a3604051610af090816103338239f35b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152601660248201527f50726f666974206d617267696e20746f6f2068696768000000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601160248201527008ccaca40e4c2e8ca40e8dede40d0d2ced607b1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f496e76616c696420706c6174666f726d2077616c6c65740000000000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270496e76616c69642061646472657373657360781b6044820152606490fd5b506001600160a01b038a1615156100ab565b506001600160a01b03821615156100a5565b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036103035756fe608080604052600436101561001357600080fd5b60003560e01c90816308551a5314610a175750806312065fe0146109fb5780631746a083146109dd57806323f64d37146109bf5780634006b29d146107bf578063493acc39146107a15780636cc6cde1146107785780637150d8ae1461074f578063978bbdb9146107315780639c76230c146105ed578063a5bbe22b146105cf578063ac4747db146105b1578063ad792f5e14610593578063c19d93fb14610569578063c2b7b86814610329578063d86f284d14610245578063ef28061c146101135763fa2af9da146100e557600080fd5b3461010e57600036600319011261010e576003546040516001600160a01b039091168152602090f35b600080fd5b600036600319011261010e576001546001600160a01b031633036101f55760ff6009541660068110156101df5761014a9015610a3b565b61015960045460065490610aa0565b34036101a257600160ff1960095416176009557f01e2943dfe53521f8a38696bd7b335349832631f719000198b9e7094393e25ad604060045460065482519182526020820152a1005b60405162461bcd60e51b8152602060048201526015602482015274125b98dbdc9c9958dd08185b5bdd5b9d081cd95b9d605a1b6044820152606490fd5b634e487b7160e01b600052602160045260246000fd5b60405162461bcd60e51b815260206004820152602260248201527f4f6e6c792073656c6c65722063616e2063616c6c20746869732066756e63746960448201526137b760f11b6064820152608490fd5b3461010e57600036600319011261010e5760ff6009541660068110156101df5760016102719114610a3b565b6000546001600160a01b031633148015610315575b156102c457600360ff1960095416176009557f0f7dd025beadbba53c7c1dcb3cdfb17a7b9a0f6cb438e27b1aff5a2e5fe45bcc6020604051338152a1005b60405162461bcd60e51b815260206004820152602360248201527f4f6e6c79207472616465207061727469636970616e74732063616e206469737060448201526275746560e81b6064820152608490fd5b506001546001600160a01b03163314610286565b3461010e57602036600319011261010e57600254600435906001600160a01b031633036105155760ff6009541660068110156101df57600361036b9114610a3b565b606481116104db57600454906103aa6103a361271061038c60075486610a77565b0461271061039c60085487610a77565b0490610aa0565b8093610aad565b60008080806103e06103d66103cc60646103c48a8a610a77565b048098610aad565b9660055490610aa0565b9560065490610aa0565b6003549097906001600160a01b03168282156104d2575bf1156104b45760008080808460018060a01b038254168282156104c9575bf1156104b45760008080808660018060a01b03600154168282156104c0575bf1156104b4577ff61356b958f0ac71f66febce3e1315aa4747992e57a54d477dd85202b434c0d0926032606093610473600460ff196009541617600955565b11156104a2576000546001600160a01b0316915b6040519260018060a01b0316835260208301526040820152a1005b6001546001600160a01b031691610487565b6040513d6000823e3d90fd5b506108fc610434565b506108fc610415565b506108fc6103f7565b60405162461bcd60e51b8152602060048201526012602482015271496e76616c69642070657263656e7461676560701b6044820152606490fd5b60405162461bcd60e51b815260206004820152602660248201527f4f6e6c792061726269747261746f722063616e2063616c6c20746869732066756044820152653731ba34b7b760d11b6064820152608490fd5b3461010e57600036600319011261010e5760ff6009541660405160068210156101df576020918152f35b3461010e57600036600319011261010e576020600654604051908152f35b3461010e57600036600319011261010e576020600a54604051908152f35b3461010e57600036600319011261010e5760206040516203f4808152f35b3461010e57600036600319011261010e57600a544211156106ec5760ff600954166006811015806101df57811580156106df575b1561069a576101df57600114610666575b600560ff1960095416176009557fc695cd059998c274ae0c0c8a411f3d839891efcd2362986a1890187baab0c4af600080a1005b600080808060018060a01b03600154164790828215610691575bf1610632576040513d6000823e3d90fd5b506108fc610680565b60405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742063616e63656c20696e2063757272656e7420737461746500006044820152606490fd5b5050600060018214610621565b60405162461bcd60e51b815260206004820152601a60248201527f547261646520646561646c696e65206e6f7420726561636865640000000000006044820152606490fd5b3461010e57600036600319011261010e576020600754604051908152f35b3461010e57600036600319011261010e576000546040516001600160a01b039091168152602090f35b3461010e57600036600319011261010e576002546040516001600160a01b039091168152602090f35b3461010e57600036600319011261010e576020600454604051908152f35b600036600319011261010e576000546001600160a01b031633036109705760ff6009541660068110156101df5760016107f89114610a3b565b600554341061092b57600260ff1960095416176009557f570dae88cad75ed3753bf550cbdfaa490146247364e0f4c23ec2284476f33219600080a1600454600080808061087361086a6108636127106108536007548a610a77565b0461271061039c6008548b610a77565b8097610aad565b60065490610aa0565b6003549095906001600160a01b0316828215610922575bf1156104b4576001546000918291829182916001600160a01b0316828215610919575bf1156104b457600080546005548291829182916001600160a01b0316828215610910575bf1156104b4576108e9600460ff196009541617600955565b7f15c9cc77e4f5c4d922d392856a540ac1aede4d79990e73c321ae1ce4309c76e2600080a1005b506108fc6108d1565b506108fc6108ad565b506108fc61088a565b60405162461bcd60e51b815260206004820152601960248201527f427579657220636f6c6c61746572616c207265717569726564000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152602160248201527f4f6e6c792062757965722063616e2063616c6c20746869732066756e6374696f6044820152603760f91b6064820152608490fd5b3461010e57600036600319011261010e576020600554604051908152f35b3461010e57600036600319011261010e576020600854604051908152f35b3461010e57600036600319011261010e57602047604051908152f35b3461010e57600036600319011261010e576001546001600160a01b03168152602090f35b15610a4257565b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420737461746560981b6044820152606490fd5b81810292918115918404141715610a8a57565b634e487b7160e01b600052601160045260246000fd5b91908201809211610a8a57565b91908203918211610a8a5756fea264697066735822122053e11e965e4773b1684fef7ce6af289e8831557a437976be052798934215988e64736f6c634300081c0033";

type EscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Escrow__factory extends ContractFactory {
  constructor(...args: EscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _buyer: AddressLike,
    _seller: AddressLike,
    _arbitrator: AddressLike,
    _platformWallet: AddressLike,
    _cryptoAmount: BigNumberish,
    _buyerCollateral: BigNumberish,
    _sellerCollateral: BigNumberish,
    _feeRate: BigNumberish,
    _profitMargin: BigNumberish,
    _tradeDuration: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _buyer,
      _seller,
      _arbitrator,
      _platformWallet,
      _cryptoAmount,
      _buyerCollateral,
      _sellerCollateral,
      _feeRate,
      _profitMargin,
      _tradeDuration,
      overrides || {}
    );
  }
  override deploy(
    _buyer: AddressLike,
    _seller: AddressLike,
    _arbitrator: AddressLike,
    _platformWallet: AddressLike,
    _cryptoAmount: BigNumberish,
    _buyerCollateral: BigNumberish,
    _sellerCollateral: BigNumberish,
    _feeRate: BigNumberish,
    _profitMargin: BigNumberish,
    _tradeDuration: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _buyer,
      _seller,
      _arbitrator,
      _platformWallet,
      _cryptoAmount,
      _buyerCollateral,
      _sellerCollateral,
      _feeRate,
      _profitMargin,
      _tradeDuration,
      overrides || {}
    ) as Promise<
      Escrow & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Escrow__factory {
    return super.connect(runner) as Escrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowInterface {
    return new Interface(_abi) as EscrowInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Escrow {
    return new Contract(address, _abi, runner) as unknown as Escrow;
  }
}
