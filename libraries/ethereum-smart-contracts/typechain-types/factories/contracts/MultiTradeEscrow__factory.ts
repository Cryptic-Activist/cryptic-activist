/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MultiTradeEscrow,
  MultiTradeEscrowInterface,
} from "../../contracts/MultiTradeEscrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_platformWallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_feeRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_profitMargin",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "buyerAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellerAmount",
        type: "uint256",
      },
    ],
    name: "ArbitrationResolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
    ],
    name: "TradeCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
    ],
    name: "TradeCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
    ],
    name: "TradeConfirmed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TradeCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "TradeDisputed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellerCollateral",
        type: "uint256",
      },
    ],
    name: "TradeFunded",
    type: "event",
  },
  {
    inputs: [],
    name: "autoCancelTrades",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tradeId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_forceCancel",
        type: "bool",
      },
    ],
    name: "cancelTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tradeId",
        type: "uint256",
      },
    ],
    name: "confirmTrade",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_arbitrator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_cryptoAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_buyerCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sellerCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sellerTotalDeposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tradeDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_profitMargin",
        type: "uint256",
      },
    ],
    name: "createTrade",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultFeeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultProfitMargin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tradeId",
        type: "uint256",
      },
    ],
    name: "disputeTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tradeId",
        type: "uint256",
      },
    ],
    name: "forceCancelTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tradeId",
        type: "uint256",
      },
    ],
    name: "fundTrade",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tradeId",
        type: "uint256",
      },
    ],
    name: "getTrade",
    outputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "cryptoAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellerCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellerTotalDeposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitMargin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tradeDeadline",
        type: "uint256",
      },
      {
        internalType: "enum MultiTradeEscrow.TradeState",
        name: "state",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tradeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerPercentage",
        type: "uint256",
      },
    ],
    name: "resolveDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "trades",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "cryptoAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellerCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellerTotalDeposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitMargin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tradeDeadline",
        type: "uint256",
      },
      {
        internalType: "enum MultiTradeEscrow.TradeState",
        name: "state",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFeeRate",
        type: "uint256",
      },
    ],
    name: "updateDefaultFeeRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newProfitMargin",
        type: "uint256",
      },
    ],
    name: "updateDefaultProfitMargin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newPlatformWallet",
        type: "address",
      },
    ],
    name: "updatePlatformWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461017657601f61147c38819003918201601f19168301916001600160401b0383118484101761017b578084926060946040528339810103126101765780516001600160a01b03811691908290036101765760406020820151910151918015610131576127108210156100f8576127108310156100b35760018060a01b031960005416176000556002556003553360018060a01b0319600154161760015560006004556040516112ea90816101928239f35b60405162461bcd60e51b815260206004820152601660248201527f50726f666974206d617267696e20746f6f2068696768000000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601160248201527008ccaca40e4c2e8ca40e8dede40d0d2ced607b1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f496e76616c696420706c6174666f726d2077616c6c65740000000000000000006044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c80620fe21d1461106957806307d334551461104b5780631e6c598e14610f83578063239c903014610f655780632db25e0514610e97578063347291bd14610d9f5780634e2e5f2814610a515780635b427fb314610a165780636f9fb98a146109fa5780637fbe518a146108b05780638ba9f708146108085780638da5cb5b146107df5780639ec0507f146105e0578063ada4ef3014610546578063bd55022a14610528578063bdc84ac31461030b578063e7326c3b14610155578063f838e4b51461011a5763fa2af9da146100ec57600080fd5b34610115576000366003190112610115576000546040516001600160a01b039091168152602090f35b600080fd5b346101155760203660031901126101155760043561014360018060a01b03600154163314611161565b6101506127108210611202565b600255005b34610115576040366003190112610115576004356024358015908115036101155761018c60045483106101878161111e565b61111e565b8160005260056020526040600020906102ba575b600b81019060ff82541660068110158061025257811580156102ad575b156102685761025257600114610201575b50805460ff191660051790557f4e02dcf02d8510f6c8a6878a3c54ae6e2bfbf552df29221d7a1eed173a6b1ae7600080a2005b60008080809361022860018060a01b03600283015416916006600482015491015490611287565b90828215610249575bf11561023d57826101ce565b6040513d6000823e3d90fd5b506108fc610231565b634e487b7160e01b600052602160045260246000fd5b60405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742063616e63656c20696e2063757272656e7420737461746500006044820152606490fd5b50506000600182146101bd565b600a81015442116101a0575b60405162461bcd60e51b815260206004820152601a60248201527f547261646520646561646c696e65206e6f7420726561636865640000000000006044820152606490fd5b346101155760403660031901126101155760043560243561033760018060a01b03600154163314611161565b81600052600560205260ff600b6040600020015416600681101561025257600361036191146111b7565b61036e600454831061111e565b606481116104ee5781600052600560205260406000209060048201546103c16103ba6127106103a1600887015485611294565b046127106103b3600988015486611294565b0490611287565b80926112a7565b9060008080806103fc6103f06103e460646103dc8b8b611294565b0480996112a7565b9760058b015490611287565b9660068a015490611287565b81549095906001600160a01b03168282156104e5575bf11561023d576001840160008080808660018060a01b038654168282156104dc575bf11561023d576002850160008080808660018060a01b038654168282156104d3575bf11561023d576032606095600b7f7c4a227b7c31773c6fb876de0aefb5be3c7960e8ddcd29f089f955ed937415169801600460ff19825416179055116000146104c15750546001600160a01b0316915b6040519260018060a01b0316835260208301526040820152a2005b546001600160a01b03169290506104a6565b506108fc610456565b506108fc610434565b506108fc610412565b60405162461bcd60e51b8152602060048201526012602482015271496e76616c69642070657263656e7461676560701b6044820152606490fd5b34610115576000366003190112610115576020600454604051908152f35b346101155760203660031901126101155761055f611108565b61057460018060a01b03600154163314611161565b6001600160a01b0316801561059b576001600160601b0360a01b6000541617600055600080f35b60405162461bcd60e51b815260206004820152601760248201527f496e76616c696420706c6174666f726d2077616c6c65740000000000000000006044820152606490fd5b60203660031901126101155760043561060460018060a01b03600154163314611161565b80600052600560205260ff600b6040600020015416600681101561025257600161062e91146111b7565b61063b600454821061111e565b80600052600560205260406000206005810154341061079a57600b01805460ff19166002179055807f56ab764471b8940ceae99d18ee42f7ccef7190a57d284469b2321de29c6afa9b600080a2806000526005602052604060002060048101546106c16127106106af600885015484611294565b046127106103b3600986015485611294565b9060008080806106e4866106df60068a01549760058b015490611287565b6112a7565b81549096906001600160a01b0316828215610791575bf11561023d5760028301546000918291829182916001600160a01b0316828215610788575bf11561023d5760018201546000918291829182916001600160a01b031682821561077f575bf11561023d57600b01805460ff191660041790557f60f91a26281f20fb528663f4da55773c83e2ee8a7a5dddb6d1753749e81dc49b600080a2005b506108fc610744565b506108fc61071f565b506108fc6106fa565b60405162461bcd60e51b815260206004820152601960248201527f427579657220636f6c6c61746572616c207265717569726564000000000000006044820152606490fd5b34610115576000366003190112610115576001546040516001600160a01b039091168152602090f35b346101155760203660031901126101155760043561083160018060a01b03600154163314611161565b80600052600560205260ff600b6040600020015416600681101561025257600161085b91146111b7565b610868600454821061111e565b806000526005602052600b604060002001600360ff198254161790557f1716a391765fa98cf509fa991d6f31a43dcb9c128bdceca13baf8ae746c4d09c6020604051338152a2005b346101155760003660031901126101155760005b60045490818110156109f8578060005260056020526040600020600a8101544211806109dd575b6108fb575b5060019150016108c4565b610908905492831061111e565b816000526005602052604060002091600a8301544211156102c657600b83019260ff84541660068110158061025257811580156109d0575b15610268576102525760011461098b575b50600192600560ff198254161790557f4e02dcf02d8510f6c8a6878a3c54ae6e2bfbf552df29221d7a1eed173a6b1ae7600080a2826108f0565b6000808080936109b260018060a01b03600283015416916006600482015491015490611287565b908282156109c7575bf11561023d5783610951565b506108fc6109bb565b5050600060018214610940565b5060ff600b82015416600681101561025257600514156108eb565b005b3461011557600036600319011261011557602047604051908152f35b3461011557602036600319011261011557600435610a3f60018060a01b03600154163314611161565b610a4c6127108210611242565b600355005b346101155761014036600319011261011557610a6b611108565b602435906001600160a01b0382168203610115576044356001600160a01b0381169190829003610115576101243592610104356001600160a01b038316151580610d8d575b80610d84575b15610d4b5760643515610d06578015610cfc57935b8015610cf3575b610adf6127108610611202565b610aec6127108210611242565b600454936000198514610cdd5760018501600455610b0c60e43542611287565b60405196610180880188811067ffffffffffffffff821117610cc75761016094600b948a92604052898352602083019460018060a01b038a168652604084019060018060a01b038a168252606085019283526080850193606435855261012060a0870196608435885260c081019860a4358a5260c43560e083015261010082015201526101408d01526000888d01528a60005260056020526040600020958c51875560018060a01b03905116600187019060018060a01b03166001600160601b0360a01b82541617905560018060a01b03905116600286019060018060a01b03166001600160601b0360a01b82541617905560018060a01b03905116600385019060018060a01b03166001600160601b0360a01b82541617905551600484015551600583015551600682015560e0870151600782015561010087015160088201556101208701516009820155610140870151600a820155019401519360068510156102525760209460ff80198354169116179055827f7db1856a9087992b8c7c25a7f1622a9b144ff325953aee6bbb6d38d762c189f68560405193606435855260018060a01b03169460018060a01b031693a4604051908152f35b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b50600354610ad2565b5060025493610acb565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270496e76616c69642061646472657373657360781b6044820152606490fd5b50831515610ab6565b506001600160a01b0382161515610ab0565b602036600319011261011557600435610dc360018060a01b03600154163314611161565b80600052600560205260ff600b6040600020015416600681101561025257610deb90156111b7565b610df8600454821061111e565b8060005260056020526040600020600781019081543403610e5a577fbe01c2c653297af8400bf87c16beb2690b9e0a2c54d7a9728222669fbace077391600482600b60409401600160ff198254161790550154905482519182526020820152a2005b60405162461bcd60e51b8152602060048201526015602482015274125b98dbdc9c9958dd08185b5bdd5b9d081cd95b9d605a1b6044820152606490fd5b3461011557602036600319011261011557600435610eb8600454821061111e565b60005260056020526101606040600020610f6360018060a01b036001830154169160018060a01b036002820154169060018060a01b0360038201541660048201546005830154600684015460078501549160088601549360098701549560ff600b600a8a015499015416986040519b8c5260208c015260408b015260608a0152608089015260a088015260c087015260e08601526101008501526101208401526101408301906110fb565bf35b34610115576000366003190112610115576020600354604051908152f35b346101155760203660031901126101155760043560005260056020526101806040600020610f6381549160018060a01b036001820154169060018060a01b0360028201541660018060a01b036003830154166004830154600584015460068501549060078601549260088701549460098801549660ff600b600a8b01549a015416996040519c8d5260208d015260408c015260608b015260808a015260a089015260c088015260e08701526101008601526101208501526101408401526101608301906110fb565b34610115576000366003190112610115576020600254604051908152f35b346101155760203660031901126101155760043561108e60045482106101878161111e565b8060005260056020526040600020600b81019060ff82541660068110158061025257811580156102ad571561026857610252576001146102015750805460ff191660051790557f4e02dcf02d8510f6c8a6878a3c54ae6e2bfbf552df29221d7a1eed173a6b1ae7600080a2005b9060068210156102525752565b600435906001600160a01b038216820361011557565b1561112557565b60405162461bcd60e51b8152602060048201526014602482015273151c98591948191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b1561116857565b60405162461bcd60e51b815260206004820152602160248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6044820152603760f91b6064820152608490fd5b156111be57565b606460405162461bcd60e51b815260206004820152602060248201527f496e76616c696420737461746520666f722074686973206f7065726174696f6e6044820152fd5b1561120957565b60405162461bcd60e51b815260206004820152601160248201527008ccaca40e4c2e8ca40e8dede40d0d2ced607b1b6044820152606490fd5b1561124957565b60405162461bcd60e51b81526020600482015260166024820152750a0e4deccd2e840dac2e4ced2dc40e8dede40d0d2ced60531b6044820152606490fd5b91908201809211610cdd57565b81810292918115918404141715610cdd57565b91908203918211610cdd5756fea26469706673582212204cd31fed8222df01802b160ca02ffc54b29b08f2dcbb6ee0927342f8a0d6899e64736f6c634300081c0033";

type MultiTradeEscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiTradeEscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiTradeEscrow__factory extends ContractFactory {
  constructor(...args: MultiTradeEscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _platformWallet: AddressLike,
    _feeRate: BigNumberish,
    _profitMargin: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _platformWallet,
      _feeRate,
      _profitMargin,
      overrides || {}
    );
  }
  override deploy(
    _platformWallet: AddressLike,
    _feeRate: BigNumberish,
    _profitMargin: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _platformWallet,
      _feeRate,
      _profitMargin,
      overrides || {}
    ) as Promise<
      MultiTradeEscrow & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MultiTradeEscrow__factory {
    return super.connect(runner) as MultiTradeEscrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiTradeEscrowInterface {
    return new Interface(_abi) as MultiTradeEscrowInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MultiTradeEscrow {
    return new Contract(address, _abi, runner) as unknown as MultiTradeEscrow;
  }
}
