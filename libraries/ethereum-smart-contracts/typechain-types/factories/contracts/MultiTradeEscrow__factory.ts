/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MultiTradeEscrow,
  MultiTradeEscrowInterface,
} from "../../contracts/MultiTradeEscrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_platformWallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_feeRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_profitMargin",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "buyerAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellerAmount",
        type: "uint256",
      },
    ],
    name: "ArbitrationResolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
    ],
    name: "TradeCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
    ],
    name: "TradeCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
    ],
    name: "TradeConfirmed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TradeCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "TradeDisputed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tradeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellerCollateral",
        type: "uint256",
      },
    ],
    name: "TradeFunded",
    type: "event",
  },
  {
    inputs: [],
    name: "autoCancelTrades",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tradeId",
        type: "uint256",
      },
    ],
    name: "cancelTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tradeId",
        type: "uint256",
      },
    ],
    name: "confirmTrade",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_arbitrator",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_buyerCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sellerCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tradeDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_feeRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_profitMargin",
        type: "uint256",
      },
    ],
    name: "createTrade",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultFeeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultProfitMargin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tradeId",
        type: "uint256",
      },
    ],
    name: "disputeTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tradeId",
        type: "uint256",
      },
    ],
    name: "forceCancelTrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tradeId",
        type: "uint256",
      },
    ],
    name: "fundTrade",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tradeId",
        type: "uint256",
      },
    ],
    name: "getTrade",
    outputs: [
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellerCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitMargin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tradeDeadline",
        type: "uint256",
      },
      {
        internalType: "enum MultiTradeEscrow.TradeState",
        name: "state",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "platformWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tradeId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerPercentage",
        type: "uint256",
      },
    ],
    name: "resolveDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "trades",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "arbitrator",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "buyerCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sellerCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "profitMargin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tradeDeadline",
        type: "uint256",
      },
      {
        internalType: "enum MultiTradeEscrow.TradeState",
        name: "state",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFeeRate",
        type: "uint256",
      },
    ],
    name: "updateDefaultFeeRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newProfitMargin",
        type: "uint256",
      },
    ],
    name: "updateDefaultProfitMargin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newPlatformWallet",
        type: "address",
      },
    ],
    name: "updatePlatformWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461017657601f61161a38819003918201601f19168301916001600160401b0383118484101761017b578084926060946040528339810103126101765780516001600160a01b03811691908290036101765760406020820151910151918015610131576127108210156100f8576127108310156100b35760018060a01b031960005416176000556002556003553360018060a01b03196001541617600155600060045560405161148890816101928239f35b60405162461bcd60e51b815260206004820152601660248201527f50726f666974206d617267696e20746f6f2068696768000000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601160248201527008ccaca40e4c2e8ca40e8dede40d0d2ced607b1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f496e76616c696420706c6174666f726d2077616c6c65740000000000000000006044820152606490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c80620fe21d146110f857806307d33455146110da57806309ec6cc714610fef5780631e6c598e14610f1f578063239c903014610f015780632db25e0514610e3e578063347291bd14610cd05780635b427fb314610c955780636880c2ed146108d55780636f9fb98a146108b95780637fbe518a146106ee5780638ba9f708146106465780638da5cb5b1461061d5780639ec0507f1461042a578063ada4ef3014610390578063bd55022a14610372578063bdc84ac314610155578063f838e4b51461011a5763fa2af9da146100ec57600080fd5b34610115576000366003190112610115576000546040516001600160a01b039091168152602090f35b600080fd5b346101155760203660031901126101155760043561014360018060a01b036001541633146111f0565b61015061271082106112e3565b600255005b346101155760403660031901126101155760043560243561018160018060a01b036001541633146111f0565b81600052600560205260ff600b6040600020015416600681101561035c5760036101ab9114611246565b6101b860045483106111ad565b606481116103225760607f7c4a227b7c31773c6fb876de0aefb5be3c7960e8ddcd29f089f955ed9374151691836000526005602052604060002090600582015461022f61022861271061020f600887015485611345565b04612710610221600988015486611345565b0490611291565b8092611358565b92603261026761025b61024f6064610247888a611345565b048098611358565b96600685015490611291565b95600784015490611291565b60048301805460005492969195919261028d92916001600160a01b0391821691166113b0565b83546001840180549095600b9290916102b4918a916001600160a01b0390811691166113b0565b546002850180549095916102d69189916001600160a01b0391821691166113b0565b01805460ff1916600417905511156103105750546001600160a01b0316915b6040519260018060a01b0316835260208301526040820152a2005b546001600160a01b03169290506102f5565b60405162461bcd60e51b8152602060048201526012602482015271496e76616c69642070657263656e7461676560701b6044820152606490fd5b634e487b7160e01b600052602160045260246000fd5b34610115576000366003190112610115576020600454604051908152f35b34610115576020366003190112610115576103a9611197565b6103be60018060a01b036001541633146111f0565b6001600160a01b031680156103e5576001600160601b0360a01b6000541617600055600080f35b60405162461bcd60e51b815260206004820152601760248201527f496e76616c696420706c6174666f726d2077616c6c65740000000000000000006044820152606490fd5b60203660031901126101155760043561044e60018060a01b036001541633146111f0565b80600052600560205260ff600b6040600020015416600681101561035c5760016104789114611246565b61048560045482106111ad565b80600052600560205260406000206006810154908134106105d8576004810154600b926104be91309033906001600160a01b0316611365565b01805460ff19166002179055807f56ab764471b8940ceae99d18ee42f7ccef7190a57d284469b2321de29c6afa9b600080a2806000526005602052600b60406000206105a5600582015461052e61271061051c600886015484611345565b04612710610221600987015485611345565b61058d61054e82610549600788015495600689015490611291565b611358565b60048601805460005492959194919261057492916001600160a01b0391821691166113b0565b825460028701546001600160a01b0390811691166113b0565b5460018401546001600160a01b0390811691166113b0565b01805460ff191660041790557f60f91a26281f20fb528663f4da55773c83e2ee8a7a5dddb6d1753749e81dc49b600080a2005b60405162461bcd60e51b815260206004820152601960248201527f427579657220636f6c6c61746572616c207265717569726564000000000000006044820152606490fd5b34610115576000366003190112610115576001546040516001600160a01b039091168152602090f35b346101155760203660031901126101155760043561066f60018060a01b036001541633146111f0565b80600052600560205260ff600b6040600020015416600681101561035c5760016106999114611246565b6106a660045482106111ad565b806000526005602052600b604060002001600360ff198254161790557f1716a391765fa98cf509fa991d6f31a43dcb9c128bdceca13baf8ae746c4d09c6020604051338152a2005b346101155760003660031901126101155760005b60045490818110156108b7578060005260056020526040600020600a81015442118061089c575b610739575b506001915001610702565b61074690549283106111ad565b816000526005602052604060002091600a83015442111561085757600b830160ff8154169360068510158061035c578515801561084a575b156108055761035c5760018095146107c8575b50805460ff191660051790557f4e02dcf02d8510f6c8a6878a3c54ae6e2bfbf552df29221d7a1eed173a6b1ae7600080a28261072e565b6107ff90858060a01b03600482015416906107f9878060a01b03600283015416916007600582015491015490611291565b916113b0565b84610791565b60405162461bcd60e51b815260206004820152601e60248201527f43616e6e6f742063616e63656c20696e2063757272656e7420737461746500006044820152606490fd5b505060006001861461077e565b60405162461bcd60e51b815260206004820152601a60248201527f547261646520646561646c696e65206e6f7420726561636865640000000000006044820152606490fd5b5060ff600b82015416600681101561035c5760051415610729565b005b3461011557600036600319011261011557602047604051908152f35b3461011557610140366003190112610115576108ef611197565b602435906001600160a01b0382168203610115576044356001600160a01b0381169190829003610115576064356001600160a01b0381169390849003610115576101243592610104356001600160a01b038416151580610c83575b80610c7a575b15610c41578515610c0c5760843515610bc7578015610bbd57935b8015610bb4575b61097f61271086106112e3565b61098c612710821061129e565b600454946000198614610b9e57600186016004556109ac60e43542611291565b906040519761018089019089821067ffffffffffffffff831117610b885761016095600b958b936040528a8452602084019560018060a01b038b168752604085019160018060a01b038b168352606086019384526080860194855261012060a0870196608435885260c081019860a4358a5260c43560e083015261010082015201526101408d01526000888d01528a60005260056020526040600020958c51875560018060a01b03905116600187019060018060a01b03166001600160601b0360a01b82541617905560018060a01b03905116600286019060018060a01b03166001600160601b0360a01b82541617905560018060a01b03905116600385019060018060a01b03166001600160601b0360a01b82541617905560018060a01b03905116600484019060018060a01b03166001600160601b0360a01b82541617905551600583015551600682015560e0870151600782015561010087015160088201556101208701516009820155610140870151600a8201550194015193600685101561035c5760209460ff80198354169116179055827f7db1856a9087992b8c7c25a7f1622a9b144ff325953aee6bbb6d38d762c189f68560405193608435855260018060a01b03169460018060a01b031693a4604051908152f35b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b50600354610972565b506002549361096b565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b60405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b2103a37b5b2b760991b6044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270496e76616c69642061646472657373657360781b6044820152606490fd5b50811515610950565b506001600160a01b038316151561094a565b3461011557602036600319011261011557600435610cbe60018060a01b036001541633146111f0565b610ccb612710821061129e565b600355005b602036600319011261011557600435610cf460018060a01b036001541633146111f0565b80600052600560205260ff600b6040600020015416600681101561035c57610d1c9015611246565b610d2960045482106111ad565b600081815260056020526040902060048101546001600160a01b03168015610e0057600582018054906007840191825494610d648683611291565b3403610dc357610da7604095610d9d7fbe01c2c653297af8400bf87c16beb2690b9e0a2c54d7a9728222669fbace077398600b95611291565b9030903390611365565b01805460ff1916600117905554905482519182526020820152a2005b60405162461bcd60e51b8152602060048201526015602482015274125b98dbdc9c9958dd08185b5bdd5b9d081cd95b9d605a1b6044820152606490fd5b60405162461bcd60e51b81526020600482015260166024820152754e6f20746f6b656e2073657420666f7220747261646560501b6044820152606490fd5b3461011557602036600319011261011557600435610e5f60045482106111ad565b60005260056020526101406040600020610eff60018060a01b036001830154169160018060a01b036002820154169060018060a01b036003820154166005820154600683015460078401549060088501549260098601549460ff600b600a89015498015416976040519a8b5260208b015260408a01526060890152608088015260a087015260c086015260e085015261010084015261012083019061118a565bf35b34610115576000366003190112610115576020600354604051908152f35b346101155760203660031901126101155760043560005260056020526101806040600020610eff81549160018060a01b036001820154169060018060a01b0360028201541660018060a01b0360038301541660018060a01b03600484015416600584015460068501549060078601549260088701549460098801549660ff600b600a8b01549a015416996040519c8d5260208d015260408c015260608b015260808a015260a089015260c088015260e087015261010086015261012085015261014084015261016083019061118a565b34610115576020366003190112610115576004356110196004548210611014816111ad565b6111ad565b8060005260056020526040600020600a81015442111561085757600b81019060ff82541660068110158061035c57811580156110cd575b156108055761035c57600114611094575b50805460ff191660051790557f4e02dcf02d8510f6c8a6878a3c54ae6e2bfbf552df29221d7a1eed173a6b1ae7600080a2005b6004810154600282015460058301546007909301546110c7936001600160a01b0393841693909216916107f99190611291565b82611061565b5050600060018214611050565b34610115576000366003190112610115576020600254604051908152f35b346101155760203660031901126101155760043561111d6004548210611014816111ad565b8060005260056020526040600020600b81019060ff82541660068110158061035c57811580156110cd57156108055761035c576001146110945750805460ff191660051790557f4e02dcf02d8510f6c8a6878a3c54ae6e2bfbf552df29221d7a1eed173a6b1ae7600080a2005b90600682101561035c5752565b600435906001600160a01b038216820361011557565b156111b457565b60405162461bcd60e51b8152602060048201526014602482015273151c98591948191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b156111f757565b60405162461bcd60e51b815260206004820152602160248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6044820152603760f91b6064820152608490fd5b1561124d57565b606460405162461bcd60e51b815260206004820152602060248201527f496e76616c696420737461746520666f722074686973206f7065726174696f6e6044820152fd5b91908201809211610b9e57565b156112a557565b60405162461bcd60e51b81526020600482015260166024820152750a0e4deccd2e840dac2e4ced2dc40e8dede40d0d2ced60531b6044820152606490fd5b156112ea57565b60405162461bcd60e51b815260206004820152601160248201527008ccaca40e4c2e8ca40e8dede40d0d2ced607b1b6044820152606490fd5b90601f8019910116810190811067ffffffffffffffff821117610b8857604052565b81810292918115918404141715610b9e57565b91908203918211610b9e57565b6040516323b872dd60e01b60208201526001600160a01b0392831660248201529290911660448301526064808301939093529181526113ae916113a9608483611323565b6113eb565b565b60405163a9059cbb60e01b60208201526001600160a01b0390921660248301526044808301939093529181526113ae916113a9606483611323565b906000602091828151910182855af115611446576000513d61143d57506001600160a01b0381163b155b61141c5750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b60011415611415565b6040513d6000823e3d90fdfea2646970667358221220f3494445abb7c8d383f324bcda9085b74c36f9e5c1bb187a2663c5fd769fccd864736f6c634300081c0033";

type MultiTradeEscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiTradeEscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiTradeEscrow__factory extends ContractFactory {
  constructor(...args: MultiTradeEscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _platformWallet: AddressLike,
    _feeRate: BigNumberish,
    _profitMargin: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _platformWallet,
      _feeRate,
      _profitMargin,
      overrides || {}
    );
  }
  override deploy(
    _platformWallet: AddressLike,
    _feeRate: BigNumberish,
    _profitMargin: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _platformWallet,
      _feeRate,
      _profitMargin,
      overrides || {}
    ) as Promise<
      MultiTradeEscrow & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MultiTradeEscrow__factory {
    return super.connect(runner) as MultiTradeEscrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiTradeEscrowInterface {
    return new Interface(_abi) as MultiTradeEscrowInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MultiTradeEscrow {
    return new Contract(address, _abi, runner) as unknown as MultiTradeEscrow;
  }
}
