/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EscrowFactory,
  EscrowFactoryInterface,
} from "../../contracts/EscrowFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tradeAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
    ],
    name: "TradeCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_buyer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_arbitrator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_platform",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_feeRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_profitMargin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tradeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_buyerCollateral",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_sellerCollateral",
        type: "uint256",
      },
    ],
    name: "createTrade",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getTrades",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "trades",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234601557610c40908161001b8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816313e614041461017d575080631e6c598e1461013b5763e43372e91461004057600080fd5b346101365760003660031901126101365760405180602060005491828152018091600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639060005b81811061011757505050829003601f01601f191682019167ffffffffffffffff83118184101761010157908291826040526020830190602084525180915260408301919060005b8181106100df575050500390f35b82516001600160a01b03168452859450602093840193909201916001016100d1565b634e487b7160e01b600052604160045260246000fd5b82546001600160a01b031684526020909301926001928301920161008a565b600080fd5b3461013657602036600319011261013657600435600054811015610136576101646020916102e6565b905460405160039290921b1c6001600160a01b03168152f35b3461013657610120366003190112610136576004356001600160a01b0381169190829003610136576024356001600160a01b0381169190829003610136576044356001600160a01b03811690819003610136576064356001600160a01b03811690819003610136576108f4908184019084821067ffffffffffffffff83111761010157610120938593610317853987835286602084015260408301526060820152608435608082015260a43560a082015260c43560c082015260e43560e0820152610104356101008201520301906000f080156102da5760018060a01b03169060005468010000000000000000811015610101576020937f24bc4b8b9d895a3734df7ceca46876fa1c371a4ec1d6fdb367e88ee3860b03ae926102a8836001606095016000556102e6565b81549060031b9087821b9160018060a01b03901b191617905560405191858352868301526040820152a1604051908152f35b6040513d6000823e3d90fd5b600054811015610300576000805260206000200190600090565b634e487b7160e01b600052603260045260246000fdfe60803461010757601f6108f438819003918201601f19168301916001600160401b0383118484101761010c57808492610120946040528339810103126101075761004881610122565b9061005560208201610122565b61006160408301610122565b61006d60608401610122565b608084015160a085015160c086015160e087015161010090970151600080546001600160a01b03199081166001600160a01b039b8c1617909155600180548216988b1698909817909755600280548816968a16969096179095556003805490961697909316969096179093556004929092556005939093556006556007556008556009805460ff191690556040516107bd90816101378239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101075756fe608080604052600436101561001357600080fd5b60003560e01c90816308551a53146106e1575080631746a083146106c35780631d48e2d81461059757806323f64d37146105795780634bde38c8146105505780636cc6cde1146105275780637150d8ae146104fe578063864e1827146104d45780638a4887a3146103e1578063978bbdb9146103c3578063ad792f5e146103a5578063bbcc62f714610387578063f5eef7ef1461026f5763fc2edb86146100b957600080fd5b3461026a57600036600319011261026a576001546001600160a01b0316330361021a5760ff600954166005811015610204576002036101c957610129600654606461010660045483610751565b04918291610124606461011b60055484610751565b0494859261077a565b61077a565b60008080808560018060a01b03600354168282156101c0575bf1156101ab5760008080808460018060a01b038254168282156101b7575bf1156101ab577fa652e8633db23b7e347178a0850cf787079db76575e46548cfac761eb3cdad8392606092600360ff19600954161760095560405192835260208301526040820152a1005b6040513d6000823e3d90fd5b506108fc610160565b506108fc610142565b60405162461bcd60e51b81526020600482015260136024820152725472616465206973206e6f742061637469766560681b6044820152606490fd5b634e487b7160e01b600052602160045260246000fd5b60405162461bcd60e51b815260206004820152602260248201527f4f6e6c792073656c6c65722063616e2066696e616c697a652074686520747261604482015261646560f01b6064820152608490fd5b600080fd5b600036600319011261026a576001546001600160a01b031633036103365760ff600954166005811015610204576102a69015610705565b60065434036102db577fbebaf5a87ebc513504319cd495686139cbc7c19a272d84880034b51fc3e4b7e46020604051348152a1005b60405162461bcd60e51b815260206004820152602d60248201527f4465706f736974206d75737420657175616c207468652073706563696669656460448201526c081d1c98591948185b5bdd5b9d609a1b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f4f6e6c792073656c6c65722063616e206465706f73697420747261646520616d6044820152631bdd5b9d60e21b6064820152608490fd5b3461026a57600036600319011261026a576020600654604051908152f35b3461026a57600036600319011261026a576020600854604051908152f35b3461026a57600036600319011261026a576020600454604051908152f35b600036600319011261026a576001546001600160a01b03163303610484576008543403610434577fdd15715b4e94c84a0699fb685a163fb572c256474df91833cfce83935abb3fcb6020604051348152a1005b60405162461bcd60e51b815260206004820152602260248201527f496e636f72726563742073656c6c657220636f6c6c61746572616c20616d6f756044820152611b9d60f21b6064820152608490fd5b60405162461bcd60e51b815260206004820152602260248201527f4f6e6c792073656c6c65722063616e206465706f73697420636f6c6c61746572604482015261185b60f21b6064820152608490fd5b3461026a57600036600319011261026a5760ff600954166040516005821015610204576020918152f35b3461026a57600036600319011261026a576000546040516001600160a01b039091168152602090f35b3461026a57600036600319011261026a576002546040516001600160a01b039091168152602090f35b3461026a57600036600319011261026a576003546040516001600160a01b039091168152602090f35b3461026a57600036600319011261026a576020600754604051908152f35b600036600319011261026a576000546001600160a01b031633036106745760ff60095416600581101561020457806105d89115908115610669575b50610705565b600754340361061a57600260ff1960095416176009557f2006ed12172ec0cf20c4414a13f1fc71fc62da5464ab9f8d5cd79da9d4d916f96020604051348152a1005b60405162461bcd60e51b815260206004820152602160248201527f496e636f727265637420627579657220636f6c6c61746572616c20616d6f756e6044820152601d60fa1b6064820152608490fd5b6001915014826105d2565b60405162461bcd60e51b815260206004820152602160248201527f4f6e6c792062757965722063616e206465706f73697420636f6c6c61746572616044820152601b60fa1b6064820152608490fd5b3461026a57600036600319011261026a576020600554604051908152f35b3461026a57600036600319011261026a576001546001600160a01b03168152602090f35b1561070c57565b60405162461bcd60e51b815260206004820152601f60248201527f547261646520737461746520696e76616c696420666f72206465706f736974006044820152606490fd5b8181029291811591840414171561076457565b634e487b7160e01b600052601160045260246000fd5b919082039182116107645756fea2646970667358221220be7b073517997b81d2d5977f80ed6c273abc89233ce6d1c789c075d8d7859ada64736f6c634300081c0033a2646970667358221220dca316b31e95910190c8ee0e0ef2043aacd7b784295adea21f36a3a564f4dea464736f6c634300081c0033";

type EscrowFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EscrowFactory__factory extends ContractFactory {
  constructor(...args: EscrowFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EscrowFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EscrowFactory__factory {
    return super.connect(runner) as EscrowFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowFactoryInterface {
    return new Interface(_abi) as EscrowFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EscrowFactory {
    return new Contract(address, _abi, runner) as unknown as EscrowFactory;
  }
}
